import{_ as a,X as i,Y as t,a1 as r}from"./framework-370f8292.js";const s="/img/09-Databases/QQ截图20230406212950.png",n="/img/09-Databases/QQ截图20230406213009.png",l={},e=r('<h1 id="数据库简介" tabindex="-1"><a class="header-anchor" href="#数据库简介" aria-hidden="true">#</a> 数据库简介</h1><p>了解什么是数据库以及在系统设计中的用例。</p><h2 id="问题陈述" tabindex="-1"><a class="header-anchor" href="#问题陈述" aria-hidden="true">#</a> 问题陈述</h2><p>让我们从一个简单的问题开始。我们能否在不使用数据库的情况下创建软件应用程序？假设我们有一个像 WhatsApp 一样的应用程序。人们使用我们的应用程序与他们的朋友进行通信。现在，我们可以在哪里和如何永久存储信息（人名列表和他们各自的消息），并检索它？</p><p>我们可以使用一个简单的文件来将所有记录分别存储在不同的行中，并从同一个文件中检索它们。但是使用文件存储具有一些限制。</p><h3 id="文件存储的限制" tabindex="-1"><a class="header-anchor" href="#文件存储的限制" aria-hidden="true">#</a> 文件存储的限制</h3><ul><li>我们不能为从不同位置访问存储文件的单独用户提供并发管理。</li><li>我们无法授予不同的用户不同的访问权限。</li><li>当添加数千个条目时，系统如何扩展并可用？</li><li>我们如何在短时间内为不同的用户搜索内容？</li></ul><p><img src="'+s+'" alt="QQ截图20230406212950" loading="lazy"></p><p>文件存储的限制</p><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h3><p>上述限制可以使用数据库来解决。</p><p><strong>数据库</strong>是一个组织良好的数据集合，可以轻松管理和访问。创建数据库是为了使连接不同数据处理过程的数据存储、检索、修改和删除更容易。</p><p>我们使用数据库管理的一些应用程序包括银行系统、在线购物商店等。不同的组织根据其需求拥有不同大小的数据库。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>注</strong>: 根据一些来源，世界气候数据中心（WDCC）是世界上最大的数据库。它包含大约 220 个太字节的 Web 数据和额外的 6 个 PB 数据。</p></div><p>有两种基本类型的数据库：</p><ul><li>SQL（关系型数据库）</li><li>NoSQL（非关系型数据库）</li></ul><p>它们在使用案例、它们持有的信息类型和它们采用的存储方法方面有所不同。</p><p><img src="'+n+'" alt="QQ截图20230406213009" loading="lazy"></p><p>SQL vs. NoSQL</p><p>关系型数据库像记录联系人电话号码和地址的电话簿一样有组织且具有预定的模式。非关系型数据库像存储人的常量信息到购物偏好等任何内容的文件目录一样是无结构、分散的，且具有动态模式。我们将在下一课中详细讨论它们的差异和类型。</p><h2 id="优势" tabindex="-1"><a class="header-anchor" href="#优势" aria-hidden="true">#</a> 优势</h2><p>对于每个企业或组织来说，一个适当的数据库都是必不可少的。这是因为数据库存储有关组织的所有重要信息，例如人员记录、交易、薪资信息等。以下是数据库的重要性原因：</p><ul><li><strong>管理大量数据</strong>：使用数据库可以轻松处理大量数据，而使用其他工具是不可能的。</li><li><strong>检索准确数据（数据一致性）</strong>：由于数据库中的不同约束，我们可以在需要时检索准确的数据。</li><li><strong>轻松更新</strong>：使用数据操作语言（DML）轻松更新数据库中的数据。</li><li><strong>安全性</strong>：数据库确保数据的安全性。只有经过授权的用户才能访问数据。</li><li><strong>数据完整性</strong>：数据库通过使用不同的数据约束确保数据完整性。</li><li><strong>可用性</strong>：数据库可以在不同的服务器上复制（使用 数据复制 ），这些副本可以同时更新。这些副本确保可用性。</li><li><strong>可伸缩性</strong>：数据库被划分（使用 数据分区）以管理单个节点上的负载。这增加了可伸缩性。</li></ul><h2 id="我们如何解释数据库" tabindex="-1"><a class="header-anchor" href="#我们如何解释数据库" aria-hidden="true">#</a> 我们如何解释数据库？</h2><p>我们将数据库章节分为四课：</p><ol><li><strong>数据库类型</strong>：我们将讨论不同类型的数据库、它们的优点和缺点。</li><li><strong>数据复制</strong>：我们将讨论什么是数据复制，以及它的不同模型和它们的优缺点。</li><li><strong>数据分区</strong>：我们将讨论什么是数据分区，以及它的不同模型和它们的优缺点。</li><li><strong>成本效益分析</strong>：我们将讨论不同种类的数据库分片方法哪种最好。</li></ol><p>让我们从了解不同类型的数据库及其首选用例开始。</p>',27),o=[e];function p(h,d){return i(),t("div",null,o)}const g=a(l,[["render",p],["__file","01Databases.html.vue"]]);export{g as default};
