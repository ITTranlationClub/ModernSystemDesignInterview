import{_ as t,X as e,Y as a,a1 as d}from"./framework-370f8292.js";const i="/img/07-DomainNameSystem/QQ截图20230406204411.png",o="/img/07-DomainNameSystem/QQ截图20230413200715.png",n="/img/07-DomainNameSystem/QQ截图20230413200736.png",r="/img/07-DomainNameSystem/QQ截图20230413200759.png",s="/img/07-DomainNameSystem/QQ截图20230413200820.png",m="/img/07-DomainNameSystem/QQ截图20230413200840.png",p="/img/07-DomainNameSystem/QQ截图20230413200903.png",l="/img/07-DomainNameSystem/QQ截图20230413200921.png",g={},c=d('<p>学习通过 DNS 将域名转换为 IP 地址。</p><h2 id="dns-的起源" tabindex="-1"><a class="header-anchor" href="#dns-的起源" aria-hidden="true">#</a> DNS 的起源</h2><p>我们可以考虑一个移动电话的例子，在这个例子中，每个用户都与唯一的号码相关联。为了给朋友打电话，我们可以最初尝试记住一些电话号码。然而，随着联系人数量的增加，我们将不得不使用电话簿来跟踪所有联系人。这样，每当我们需要打电话时，我们会参考电话簿并拨打我们需要的号码。</p><p>类似地，计算机通过 IP 地址进行唯一标识，例如 <code>104.18.2.119</code> 就是一个 IP 地址。我们使用 IP 地址访问托管在计算机上的网站。由于人类不能轻易地记住 IP 地址以访问域名(例如 <code>educative.io</code>)，我们需要一个类似电话簿的存储库来维护所有域名到 IP 地址的映射。在本章中，我们将看到 DNS 是互联网电话簿。</p><p><img src="'+i+'" alt="QQ截图20230406204411" loading="lazy"></p><p>使用电话簿类比理解域名系统(DNS)</p><h2 id="什么是dns" tabindex="-1"><a class="header-anchor" href="#什么是dns" aria-hidden="true">#</a> 什么是DNS？</h2><p><strong>域名系统(DNS)</strong> 是互联网的命名服务，将人类友好的域名映射到机器可读的 IP 地址。DNS 服务对用户透明。当用户在浏览器中输入域名时，浏览器必须通过询问 DNS 基础设施将域名转换为 IP 地址。一旦获取所需的 IP 地址，用户的请求将转发到目标 Web 服务器。</p><p>下面的幻灯片展示了 DNS 工作的高级流程：</p><p><img src="'+o+'" alt="QQ截图20230413200715" loading="lazy"></p><p>用户通过在浏览器中输入其 URL 请求访问网站</p><p><img src="'+n+'" alt="QQ截图20230413200736" loading="lazy"></p><p>浏览器请求 ISP 转发 DNS 查询以解决对 IP 地址的请求</p><p><img src="'+r+'" alt="QQ截图20230413200759" loading="lazy"></p><p>ISP 将 DNS 查询转发到 DNS 基础设施</p><p><img src="'+s+'" alt="QQ截图20230413200820" loading="lazy"></p><p>DNS 基础设施响应域名匹配到的 IP 地址列表</p><p><img src="'+m+'" alt="QQ截图20230413200840" loading="lazy"></p><p>IP 地址到达浏览器</p><p><img src="'+p+'" alt="QQ截图20230413200903" loading="lazy"></p><p>浏览器在接收到的 IP 地址上发送 HTTP 请求</p><p><img src="'+l+'" alt="QQ截图20230413200921" loading="lazy"></p><p>ISP 将 HTTP 请求转发到 Web 服务器</p><p>整个操作非常快速。因此，终端用户经历最小的延迟。我们将在下一课中看到浏览器如何保存一些常用的映射以供以后使用。</p><ul><li><h2 id="重要细节" tabindex="-1"><a class="header-anchor" href="#重要细节" aria-hidden="true">#</a> 重要细节</h2><p>让我们强调一些关于 DNS 的重要细节，其中一些我们将在下一课中涵盖：</p><ul><li><strong>名称服务器：</strong> 理解 DNS 不是单个服务器而是由众多服务器组成的完整基础设施很重要。响应用户查询的 DNS 服务器称为 <strong>名称服务器</strong>。</li><li><strong>资源记录：</strong> DNS 数据库以资源记录（RR）的形式存储域名与 IP 地址的映射。RR 是用户从名称服务器请求的最小信息单元。有不同类型的 RR。下表描述了常见的 RR。三个重要的信息是 <em>类型</em>，<em>名称</em> 和 <em>值</em>。根据 RR 的 <em>类型</em>，<em>名称</em> 和 <em>值</em> 会发生变化。</li></ul><h2 id="常见的资源记录类型" tabindex="-1"><a class="header-anchor" href="#常见的资源记录类型" aria-hidden="true">#</a> 常见的资源记录类型</h2><table><thead><tr><th><strong>类型</strong></th><th><strong>描述</strong></th><th><strong>名称</strong></th><th><strong>值</strong></th><th><strong>示例 (类型，名称，值)</strong></th></tr></thead><tbody><tr><td>A</td><td>提供主机名到 IP 地址的映射</td><td>主机名</td><td>IP 地址</td><td>(A, relay1.main.educative.io,104.18.2.119)</td></tr><tr><td>NS</td><td>提供域名的权威 DNS 的主机名</td><td>域名</td><td>主机名</td><td>(NS, educative.io, dns.educative.io)</td></tr><tr><td>CNAME</td><td>提供别名到规范主机名的映射</td><td>主机名</td><td>规范主机名</td><td>(CNAME, educative.io, server1.primary.educative.io)</td></tr><tr><td>MX</td><td>提供邮件服务器从别名到规范主机名的映射</td><td>主机名</td><td>规范主机名</td><td>(MX, mail.educative.io, mailserver1.backup.educative.io)</td></tr></tbody></table><ul><li><strong>缓存：</strong> DNS 在不同层使用缓存以减少用户请求的延迟。缓存在减少 DNS 基础设施负担方面发挥了重要作用，因为它必须应对整个互联网的查询。</li><li><strong>层次结构：</strong> DNS 名称服务器呈分层形式。分层结构允许 DNS 在不断增大的大小和查询负载下具有高度可扩展性。在下一课中，我们将了解如何使用树状结构来管理整个 DNS 数据库。</li></ul><p>让我们在下一课中探索以上观点的更多细节，以获得更清晰的理解。</p></li></ul>',25),h=[c];function S(N,D){return e(),a("div",null,h)}const Q=t(g,[["render",S],["__file","01DomainNameSystem.html.vue"]]);export{Q as default};
